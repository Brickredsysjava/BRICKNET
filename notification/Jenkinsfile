pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the repository
                checkout scm
            }
        }


         stage('Build notification') {
            steps {
                // Build the Spring Boot application using Maven
                sh 'cd notification && mvn clean package -DskipTests'
            }
        }
	
	 stage('Deploy notification') {
             steps {

                 sh "ssh root@103.255.224.46 'cd /root'"
                 sh "ssh root@103.255.224.46 'rm -rf notification || true'"
                 sh "ssh root@103.255.224.46 'mkdir notification'"
                 
                 sh 'scp -i id_rsa /var/jenkins_home/workspace/notification/notification/target/notification.jar root@103.255.224.46:~/notification/'
                 sh 'scp -i id_rsa /var/jenkins_home/workspace/notification/notification/Dockerfile root@103.255.224.46:~/notification/'

		 sh "ssh root@103.255.224.46 'docker service rm bricknetstack_notification || true'"
                 sh "ssh root@103.255.224.46 'docker stop root_notification_1 || true'"
                 sh "ssh root@103.255.224.46 'docker rm root_notification_1 || true'"
                 sh "ssh root@103.255.224.46 'docker rmi root_notification_1 || true'"
                 sh "ssh root@103.255.224.46 'docker build -t root_notification_1 /root/notification'"
                 // sh "ssh root@103.255.224.46 'docker run -it -d -p 8084:8084 --network=root_default --name root_notification_1 root_notification_1'"
                 sh "ssh root@103.255.224.46 'docker service create -d -p 8084:8084 --replicas 2 --network=bricknetstack_default --name bricknetstack_notification root_notification_1'"

	     }
		 
         }        
	
     }
     
  }   
