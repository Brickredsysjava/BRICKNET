pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the repository
                checkout scm
            }
        }


         stage('Build auth-server') {
            steps {
                // Build the Spring Boot application using Maven
                sh 'cd auth-server && mvn clean package -DskipTests'
            }
        }
	
	 stage('Deploy auth-server') {
             steps {
                 sh "ssh root@103.255.224.46 'cd /root'"
                 sh "ssh root@103.255.224.46 'rm -rf auth-server || true'"
                 sh "ssh root@103.255.224.46 'mkdir auth-server'"
                 
                 sh 'scp -i id_rsa /var/jenkins_home/workspace/auth-server/auth-server/target/auth-server.jar root@103.255.224.46:~/auth-server/'
                 sh 'scp -i id_rsa /var/jenkins_home/workspace/auth-server/auth-server/Dockerfile root@103.255.224.46:~/auth-server/'

		 sh "ssh root@103.255.224.46 'docker service rm bricknetstack_auth-server || true'"
                 sh "ssh root@103.255.224.46 'docker stop root_auth-server_1 || true'"
                 sh "ssh root@103.255.224.46 'docker rm root_auth-server_1 || true'"
                 sh "ssh root@103.255.224.46 'docker rmi root_auth-server_1 || true'"
                 sh "ssh root@103.255.224.46 'docker build -t root_auth-server_1 /root/auth-server'"
                 // sh "ssh root@103.255.224.46 'docker run -it -d -p 8083:8083 --network=root_default --name root_auth-server_1 root_auth-server_1'"
                 sh "ssh root@103.255.224.46 'docker service create -d -p 8083:8083 --replicas 2 --network=bricknetstack_default --name bricknetstack_auth-server root_auth-server_1'"		     
             }
         }        
	
     }
     
  }   
