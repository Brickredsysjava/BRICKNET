pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the repository
                checkout scm
            }
        }


         stage('Build media-service') {
            steps {
                // Build the Spring Boot application using Maven
                sh 'cd media-service && mvn clean package -DskipTests'
            }
        }
	
	 stage('Deploy media-service') {
             steps {
                 sh "ssh root@192.168.1.9 'cd /root'"
                 sh "ssh root@192.168.1.9 'rm -rf mediaservice || true'"
                 sh "ssh root@192.168.1.9 'mkdir mediaservice'"
                 
                 sh ' scp -i id_rsa /var/jenkins_home/workspace/mediaservice/media-service/target/mediaservice.jar root@192.168.1.9:~/mediaservice/'
                 sh ' scp -i id_rsa /var/jenkins_home/workspace/mediaservice/media-service/Dockerfile root@192.168.1.9:~/mediaservice/'

		 sh "ssh root@192.168.1.9 'docker service rm bricknetstack_mediaservice || true'"		 
                 sh "ssh root@192.168.1.9 'docker stop root_mediaservice_1 || true'"
                 sh "ssh root@192.168.1.9 'docker rm root_mediaservice_1 || true'"
                 sh "ssh root@192.168.1.9 'docker rmi root_mediaservice_1 ||true'"
                 sh "ssh root@192.168.1.9 'docker build -t root_mediaservice_1 /root/mediaservice'"
                 // sh "ssh root@192.168.1.9 'docker run -it -d -p 9268:9268 --network=root_default -v root_media_files:/upload/ --name root_mediaservice_1 root_mediaservice_1 '"
		 sh "ssh root@192.168.1.9 'docker service create -d -p 9268:9268 --name bricknetstack_mediaservice --mount type=volume,source=bricknetstack_media_files,target=/upload/ --network bricknetstack_default --replicas 2 root_mediaservice_1'"

             }
         }        
	
     }
     
  }   
